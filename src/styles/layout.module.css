.container {
  display: grid;
  gap: 2vmin;
  width: 100vw;
  height: 100vh;
  box-sizing: border-box;
  background-color: var(--surface);
}

.right {
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column;
  justify-content: space-between;
  align-items: stretch;
  border-radius: 2vmin;
  padding: 2vmin;
  align-content: stretch;
  grid-area: right;
  overflow: auto;
  background-color: var(--surface-bright);
  gap: 2vmin;
}
.right > * {
  flex: 1 0 auto;
}

.name {
  display: flex;
  flex-flow: row nowrap;
  border-radius: 2vmin;
  box-shadow: var(--dp1);
  background-color: var(--surface-dim);
  padding: 2vmin;
  gap: 2vmin;
  justify-content: space-between;
  align-items: stretch;
  grid-area: name;
}
.name > * {
  flex: 1 1 100%;
}

.left {
  grid-area: left;
  background-color: var(--surface-container);
  box-shadow: var(--dp5);
  border-radius: 2vmin;
  display: flex;
  flex-flow: row wrap;
  padding: 2vmin;
  gap: 2vmin;
  justify-content: space-between;
  align-items: stretch;
  align-content: stretch;
  overflow: auto;
}
.left > * {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 20%;
  align-self: stretch;
  order: 0;
}

.divission {
  height: 100%;
  width: 5px;
  background-color: var(--oultine);
}

.link {
  background-color: var(--surface-variant);
  color: var(--on-surface-variant);
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;
  align-content: stretch;
  align-items: center;
  border-radius: 2vmin;
  box-shadow: var(--dp2);
}
.link:hover, .link:active {
  background-color: var(--inverse-surface);
  color: var(--inverse-on-surface);
}
.link:hover > span, .link:active > span {
  font-variation-settings: "FILL" 1, "wght" 600, "GRAD" 200, "opsz" 40;
}

@media screen and (max-width: 600px) {
  .container {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(12, 1fr);
    grid-auto-flow: row;
    grid-template-areas: "header header header header" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body" "body body body body";
  }
  .header {
    grid-area: header;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: stretch;
    border-radius: 0 0 2vmin 2vmin;
    gap: 1vmin;
    padding: 1vmin;
    box-shadow: var(--dp4);
    background-color: var(--nav-background);
  }
  .header .sidenav {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-area: ProcesosLayoutList;
    grid-template-rows: repeat(10, 1fr);
    gap: 2vmin;
    justify-content: center;
    align-content: start;
    justify-items: stretch;
    box-sizing: border-box;
    padding: 2vmin;
    box-shadow: var(--dp8);
    background-color: var(--sf-2);
    border-radius: 2vmin;
    overflow: clip;
    overflow-y: scroll;
  }
  .DrawerMenuButton {
    grid-area: DrawerMenuButton;
  }
  .HomeButton {
    grid-area: HomeButton;
  }
  .InputSearchBar {
    grid-area: InputSearchBar;
  }
  .body {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(7, 1fr);
    box-sizing: border-box;
    grid-auto-flow: row;
    grid-template-areas: "name name name name" "left left left left" "left left left left" "left left left left" "left left left left" "right right right right" "right right right right";
    grid-area: body;
  }
  .name {
    grid-area: name;
    display: flex;
    flex-flow: row nowrap;
  }
  .left {
    display: flex;
    overflow: auto;
    flex-flow: column nowrap;
    grid-area: left;
  }
  .left > * {
    width: 100%;
    height: auto;
    box-sizing: border-box;
  }
  .right {
    display: flex;
    flex-flow: column wrap;
    grid-area: right;
  }
  .right > * {
    width: 33%;
    box-sizing: border-box;
  }
}
@media screen and (min-width: 1200px) {
  .container {
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(12, 1fr);
    grid-template-areas: "header header header header header header header header header header header header" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body" "body body body body body body body body body body body body";
  }
  .header {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: stretch;
    grid-area: header;
    border-radius: 0 0 2vmin 2vmin;
    gap: 1vmin;
    padding: 1vmin;
    box-shadow: var(--dp6);
    background-color: var(--nav-background);
  }
  .header .sidenav {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-area: ProcesosLayoutList;
    grid-template-rows: repeat(10, 1fr);
    gap: 2vmin;
    justify-content: center;
    align-content: start;
    justify-items: stretch;
    box-sizing: border-box;
    padding: 2vmin;
    box-shadow: var(--dp16);
    background-color: var(--sf-2);
    border-radius: 2vmin;
    overflow: clip;
    overflow-y: scroll;
  }
  .body {
    overflow: auto;
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(9, 1fr);
    gap: 1% 1%;
    padding: 2vmin;
    grid-auto-flow: row;
    grid-template-areas: "name name name name name name name name name right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right" "left left left left left left left left left right right right";
    grid-area: body;
  }
}
.loader {
  border: 10px solid var(--outline); /* Light grey */
  border-top: 10px solid var(--tertiary); /* Blue */
  border-radius: 50%;
  width: 50px;
  height: 50px;
  box-sizing: border-box;
  animation: spin 2s linear infinite;
}
.loader > .loader {
  border: 16px solid var(--outline-variant); /* Light grey */
  border-top: 16px solid var(--secondary); /* Blue */
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
